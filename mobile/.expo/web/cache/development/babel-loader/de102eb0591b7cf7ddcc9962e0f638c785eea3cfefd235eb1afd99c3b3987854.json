{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport { useNavigation } from \"@react-navigation/native\";\nimport styled from \"styled-components/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LoginAsBarberButton = function LoginAsBarberButton() {\n  var navigation = useNavigation();\n  return _jsx(Button, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    activeOpacity: 0.5,\n    children: _jsx(Container, {\n      children: _jsx(Label, {\n        children: \"Entrar como barbeiro\"\n      })\n    })\n  });\n};\nvar Button = styled.TouchableOpacity(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: auto;\\n\"])));\nvar Container = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  padding: 5px 5px;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  column-gap: 10px;\\n\"])));\nvar Label = styled.Text(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  text-transform: uppercase;\\n  font-size: 13px;\\n  font-weight: 600;\\n  color: white;\\n  text-decoration: underline;\\n\"])));\nexport default LoginAsBarberButton;","map":{"version":3,"names":["useNavigation","styled","jsx","_jsx","LoginAsBarberButton","navigation","Button","style","justifyContent","alignItems","activeOpacity","children","Container","Label","TouchableOpacity","_templateObject","_taggedTemplateLiteralLoose","View","_templateObject2","Text","_templateObject3"],"sources":["C:/Workspace/transbarber/mobile/src/screens/Login/LoginAsBarberButton.tsx"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport styled from \"styled-components/native\";\r\nimport { StackTypes } from \"../../routes/stack\";\r\n\r\nconst LoginAsBarberButton = () => {\r\n  const navigation = useNavigation<StackTypes>();\r\n\r\n  return (\r\n    <Button\r\n      style={{ justifyContent: \"center\", alignItems: \"center\" }}\r\n      activeOpacity={0.5}\r\n    >\r\n      <Container>\r\n        <Label>Entrar como barbeiro</Label>\r\n      </Container>\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst Button = styled.TouchableOpacity`\r\n  width: auto;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  padding: 5px 5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  column-gap: 10px;\r\n`;\r\n\r\nconst Label = styled.Text`\r\n  text-transform: uppercase;\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  color: white;\r\n  text-decoration: underline;\r\n`;\r\n\r\nexport default LoginAsBarberButton;\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAG9C,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EAChC,IAAMC,UAAU,GAAGL,aAAa,CAAa,CAAC;EAE9C,OACEG,IAAA,CAACG,MAAM;IACLC,KAAK,EAAE;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAC1DC,aAAa,EAAE,GAAI;IAAAC,QAAA,EAEnBR,IAAA,CAACS,SAAS;MAAAD,QAAA,EACRR,IAAA,CAACU,KAAK;QAAAF,QAAA,EAAC;MAAoB,CAAO;IAAC,CAC1B;EAAC,CACN,CAAC;AAEb,CAAC;AAED,IAAML,MAAM,GAAGL,MAAM,CAACa,gBAAgB,CAAAC,eAAA,KAAAA,eAAA,GAAAC,2BAAA,0BAErC;AAED,IAAMJ,SAAS,GAAGX,MAAM,CAACgB,IAAI,CAAAC,gBAAA,KAAAA,gBAAA,GAAAF,2BAAA,kJAO5B;AAED,IAAMH,KAAK,GAAGZ,MAAM,CAACkB,IAAI,CAAAC,gBAAA,KAAAA,gBAAA,GAAAJ,2BAAA,iIAMxB;AAED,eAAeZ,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}